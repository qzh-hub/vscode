class Solution {
public:
    double maxProduct(vector<double> arr) {
        vector<vector<double>> dp(arr.size(), vector<double>(2, 0));
        dp[0][0] = arr[0];
        dp[0][1] = arr[0];
        double res = arr[0];
        for(int i = 1; i < arr.size(); i ++){
            if(arr[i] > 0){
                dp[i][0] = min(arr[i], dp[i - 1][0] * arr[i]);
                dp[i][1] = max(arr[i], dp[i - 1][1] * arr[i]);
            }else{
                dp[i][0] = min(arr[i], dp[i - 1][1] * arr[i]);
                dp[i][1] = max(arr[i], dp[i - 1][0] * arr[i]);
            }
            res = max(res, dp[i][1]);
        }
        return res;
    }
};