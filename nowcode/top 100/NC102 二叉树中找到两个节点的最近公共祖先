/**
 * struct TreeNode {
 *	int val;
 *	struct TreeNode *left;
 *	struct TreeNode *right;
 * };
 */

class Solution {
public:
    /**
     * 
     * @param root TreeNode类 
     * @param o1 int整型 
     * @param o2 int整型 
     * @return int整型
     */
    TreeNode* search(TreeNode* root, int p, int q){    
        if(root == nullptr || root->val == p || root->val == q)
            return root;
        TreeNode* left = search(root->left, p, q);
        TreeNode* right = search(root->right, p, q);
        if(!left && !right)
            return nullptr;
        else if(!left)
            return right;
        else if(!right)
            return left;
        else
            return root;            
    }
    int lowestCommonAncestor(TreeNode* root, int o1, int o2) {
        TreeNode* res = search(root, o1, o2);
        return res->val;
    }
};