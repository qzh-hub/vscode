/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* build(vector<int> pre, int l1, int r1, vector<int> vin, int l2, int r2){
        if(l1 > r1 || l2 > r2)
            return nullptr;
        TreeNode* node = new TreeNode(pre[l1]);
        int i = l2;
        while(vin[i] != pre[l1])
            i ++;
        node->left = build(pre, l1 + 1, l1 + i - l2, vin, l2, i - 1);
        node->right = build(pre, l1 + i - l2 + 1, r1, vin, i + 1, r2);
        return node;
    }
    TreeNode* reConstructBinaryTree(vector<int> pre,vector<int> vin) {
        return build(pre, 0, pre.size() - 1, vin, 0, vin.size() - 1);
    }
};