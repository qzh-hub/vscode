class Solution {
public:
    /**
     * 
     * @param n int整型 
     * @return string字符串vector
     */
    vector<string> res;
    string path;
    void backtrace(int lc, int rc, int n){
        if(rc > lc || lc > n || rc > n)
            return;
        if(lc == rc && lc == n){
            res.emplace_back(path);
            return;
        }
        path += '(';
        backtrace(lc + 1, rc, n);
        path.pop_back();
        path += ')';
        backtrace(lc, rc + 1, n);
        path.pop_back();
    }
    vector<string> generateParenthesis(int n) {
        backtrace(0, 0, n);
        return res;
    }
};