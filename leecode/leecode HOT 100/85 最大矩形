class Solution {
public:
    int maximalRectangle(vector<vector<char>>& matrix) {
        if(matrix.size() == 0)
            return 0;
        int row = matrix.size(), col = matrix[0].size();
        int res = 0;
        vector<vector<int>> height(row, vector<int>(col + 2, 0));
        for(int i = 0; i < row; i ++){
            stack<int> s;
            // 初始化第 i 行的高度, 即 height[i][:]
            for(int j = 1; j < col + 1; j ++){
                // i = 0 的情况
                if(i == 0)
                    height[i][j] = matrix[i][j - 1] == '1' ? 1 : 0;
                // i > 0 的 情况, 如果 matrix[i][j - 1] == 0, height[j] = 0, 如果 matrix[i][j - 1] == 1, 计算高度, height[j] + he
                else
                    height[i][j] = matrix[i][j - 1] == '1' ? 1 + height[i - 1][j] : 0; 
            }
            s.push(0);
            for(int j = 1; j < col + 2; j ++){
                if(height[i][j] > height[i][s.top()])
                    s.push(j);
                else{
                    while(height[i][j] < height[i][s.top()]){
                        int cur = s.top();
                        s.pop();
                        res = max(res, (j - s.top() - 1) * height[i][cur]);
                    }
                    s.push(j);
                }
            }
        }
        return res;
    }
};