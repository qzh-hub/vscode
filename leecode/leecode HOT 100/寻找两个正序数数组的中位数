class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {               
        int n1 = nums1.size(), n2 = nums2.size();
        vector<int> aux(n1+n2, 0);
        int left1 = 0, right1 = n1, left2 = 0, right2 = n2, i = 0;
        while(i < (n1+n2)/2+1){
            if(left1 == right1){
                aux[i++] = nums2[left2++];
            }else if(left2 == right2){
                aux[i++] = nums1[left1++];
            }else{
                if(nums1[left1] <= nums2[left2]){
                    aux[i++] = nums1[left1++];
                }else{
                    aux[i++] = nums2[left2++];
                }
            }          
        }
        return (n1+n2)%2==0 ? double((aux[(n1+n2)/2]+aux[(n1+n2)/2-1])/2.0) : double(aux[(n1+n2)/2]);
    }
};