/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *head = new ListNode(0);
        ListNode *cur = head;
        int carry = 0;
        while(l1!=nullptr || l2!=nullptr){
            ListNode *temp = new ListNode(0);
            cur->next = temp;
            cur = temp;
            if(l1 == nullptr){              
                temp->val = (l2->val+carry)%10;
                carry = (l2->val+carry)/10;
                l2 = l2->next;
            }else if(l2 == nullptr){              
                temp->val = (l1->val+carry)%10;
                carry = (l1->val+carry)/10;
                l1 = l1->next;
            }else{
                int sum = l1->val+l2->val+carry;
                temp->val = sum%10;
                carry = sum/10;
                l1 = l1->next;
                l2 = l2->next;
            }
        }
        if(carry == 1){
            ListNode *temp = new ListNode(0);
            cur->next = temp;
            temp->val = 1;
        }
        return head->next;
    }
};