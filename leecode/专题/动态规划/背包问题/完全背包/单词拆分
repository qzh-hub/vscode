class Solution {
public:
    bool wordBreak(string s, vector<string>& wordDict) {
        vector<bool> dp(s.size() + 1, false);
        dp[0] = 1;
        for(int j = 1; j <= s.size(); j ++){
            for(int i = 0; i < wordDict.size(); i ++){
                int len = wordDict[i].size();
                if(j >= len && s.substr(j - len, len) == wordDict[i] && dp[j - len] == 1){
                    // cout << endl << " [i, j] = " << i << "*" << j << s.substr(j - len, len) << endl;
                    dp[j] = dp[j - len];
                }
            }
        }
        // for(int i = 1; i <= s.size(); i ++){
        //    cout << "i = " << i << " && " << "s = " << s.substr(0, i) << "   dp[i] = " << dp[i] <<endl;
        // }
        return dp[s.size()];
    }
};