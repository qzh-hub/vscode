class Solution {
public:
    // 动态规划
    int countSubstrings(string s) {
        int len = s.size();
        int res = 0;
        vector<vector<int>> dp(len, vector<int>(len, 0));
        for(int i = len - 1; i >= 0; i --){
            for(int j = i; j < len; j ++){
                if(s[i] == s[j]){
                    if(j - i <= 1){
                        dp[i][j] = 1;
                        res ++;
                    }else{
                        if(dp[i + 1][j - 1] == 1){
                            dp[i][j] = 1;
                            res ++;
                        }                    
                    }
                }                  
            }
        }       
        return res;
    }

    // 中心扩散
    int expand(string s, int left, int right){
        int res = 0;
        while(left >= 0 && right < s.size() && s[left] == s[right]){
            left --;
            right ++;
            res ++;
        }
        return res;
    }
    int countSubstrings(string s) {
        int len = s.size();
        int res = 0;
        for(int i = 0; i < len; i ++){
            res += expand(s, i, i);
            res += expand(s, i, i + 1);
        }       
        return res;
    }
};