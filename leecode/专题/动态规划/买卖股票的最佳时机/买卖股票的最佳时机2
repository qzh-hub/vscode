class Solution {
public:
    // 动态规划
    int maxProfit(vector<int>& prices) {
        int len = prices.size();
        vector<vector<int>> dp(len, vector<int>(2, 0));
        dp[0][0] = -prices[0];
        for(int i = 1; i < len; i ++){
            dp[i][0] = max(dp[i - 1][0], dp[i - 1][1] - prices[i]);
            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0] + prices[i]);
        }
        return dp[len-1][1];
    }

    // 贪心
    int maxProfit(vector<int>& prices) {
        int len = prices.size();
        int res = 0;
        for(int i = 1; i < len; i ++){
            res += max(0, prices[i] - prices[i - 1]);
        }
        return res;
    }
};