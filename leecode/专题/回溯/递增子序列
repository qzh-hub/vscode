class Solution {
public:
    vector<vector<int>> res;
    vector<int> path;
    void backtrace(vector<int>& nums, int startIndex){
        if(path.size() > 1)
            res.emplace_back(path);
        int visited[201] = {0};
        for(int i = startIndex; i < nums.size(); i ++){                                       
            if((!path.empty() && nums[i] < path.back()) || (visited[nums[i] + 100]) == 1)
                continue;
            visited[nums[i] + 100] = 1;
            path.emplace_back(nums[i]);
            backtrace(nums, i + 1);
            path.pop_back();                                 
        }
    }
    vector<vector<int>> findSubsequences(vector<int>& nums) {
        backtrace(nums, 0);
        return res;
    }
};