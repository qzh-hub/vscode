class Solution {
public:
    vector<vector<int>> res;
    vector<int> path;
    void backtrace(int k, int n, int sum, int startIndex){
        if(path.size() == k && sum == n){
            res.emplace_back(path);
            return;
        }
        for(int i = startIndex; i <= 9; i++){
            if(sum + i > n)
                break;
            if(path.size() == k && sum < n)
                return;
            sum += i;
            path.emplace_back(i);
            backtrace(k, n, sum, i + 1);
            path.pop_back();
            sum -= i;
        }
    }
    vector<vector<int>> combinationSum3(int k, int n) {
        backtrace(k, n, 0, 1);
        return res;
    }
};