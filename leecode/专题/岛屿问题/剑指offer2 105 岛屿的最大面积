class Solution {
public:
    int dfs(vector<vector<int>>& grid, int r, int c){
        int n = grid.size(), m = grid[0].size();
        if(r < 0 || r == n || c < 0 || c == m)
            return 0;
        if(grid[r][c] == 0)
            return 0;
        else{
            grid[r][c] = 0;
            return 1 + dfs(grid, r - 1, c) + dfs(grid, r, c - 1) + dfs(grid, r, c + 1) + dfs(grid, r + 1, c);
        }

    }
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int res = 0;
        for(int i = 0; i < grid.size(); i ++){
            for(int j = 0; j < grid[0].size(); j ++){
                if(grid[i][j] == 1)
                    res = max(res, dfs(grid, i, j));
            }
        }
        return res;
    }
};