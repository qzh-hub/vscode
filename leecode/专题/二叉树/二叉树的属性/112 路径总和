/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int flag = 0;
    void backtrace(TreeNode* node, int targetSum, int sum){
        if(node->left == nullptr && node->right == nullptr && sum + node->val == targetSum){
            flag = 1;
            return;
        }
        if(node->left){
            sum += node->val;
            backtrace(node->left, targetSum, sum);
            sum -= node->val;
        }
        if(node->right){
            sum += node->val;
            backtrace(node->right, targetSum, sum);
            sum -= node->val;
        }
    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        if(root == nullptr)
            return false;
        backtrace(root, targetSum, 0);
        return flag;
    }
};