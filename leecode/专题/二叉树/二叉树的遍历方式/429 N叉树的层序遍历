/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> res;
        if(root == nullptr)
            return res;
        queue<Node*> q;        
        q.push(root);
        while(!q.empty()){
            int size = q.size();
            vector<int> level;
            while(size > 0){            
                Node* node = q.front();
                level.emplace_back(node->val);
                q.pop();
                for(int i = 0; i < node->children.size(); i ++){
                    if(node->children[i])
                        q.push(node->children[i]);
                } 
                size --;
            }
            res.emplace_back(level);
        }
        return res;
    }
};