/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int count = 1;
    int maxcount = INT_MIN;
    TreeNode* pre;
    vector<int> res;

    void inorder(TreeNode* root){
        if(root == nullptr)
            return;
        inorder(root->left);
        if(pre != nullptr){
            if(pre->val != root->val)
                count = 1;
            else
                count ++;
        }
        if(count == maxcount)
            res.emplace_back(root->val);
        if(count > maxcount){
            res.clear();
            res.emplace_back(root->val);
            maxcount = count;
        }       
        pre = root;
        inorder(root->right);
    }
    vector<int> findMode(TreeNode* root) {
        inorder(root);
        return res;
    }
};